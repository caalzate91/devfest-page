---
import type { CollectionEntry } from "astro:content";

import TalkItem from "../AgendaItem/TalkItem.astro";
import SponsorItem from "../AgendaItem/SponsorItem.astro";
import BreakItem from "../AgendaItem/BreakItem.astro";
import Modal from "../Common/Modal.astro";
import ModalTalwind from "../Common/ModalTalwind.astro";
import SpeakerCard from "../Common/SpeakerCard.astro";
import { Debug } from "astro:components";

interface Props {
	talks: CollectionEntry<"talks">[];
}

const { talks } = Astro.props;

const sortByDate = (
	a: CollectionEntry<"talks">,
	b: CollectionEntry<"talks">,
) => {
	const aDate = new Date(a.data.startDate);
	const bDate = new Date(b.data.startDate);

	return aDate.getTime() - bDate.getTime();
};

const trackWeb = talks
	.filter((talk) => talk.data.track.find((t: any) => t === "web"))
	.sort(sortByDate);
const trackCloud = talks
	.filter((talk) => talk.data.track.find((t: any) => t === "cloud"))
	.sort(sortByDate);
---

<section class="py-16 flex flex-col items-center bg-white px-4" id="agenda">
	<div class="container flex flex-col items-center space-y-12">
		<div class="flex flex-row justify-around w-2/3 gap-16">
			<!-- <div class="w-4/5 h-20 content-center">
				<img src="/public/assets/images/spiral.png" alt="" class="rotate-180 w-full max-h-8 object-contain" />
			</div>
			<div class="w-4/5 h-20 content-center">
				<img src="/public/assets/images/spiral.png" alt="" class="w-full max-h-8 object-contain" />
			</div> -->
			<h2 class="font-bold text-4xl mb-6 align-middle content-center">Agenda</h2>
			<!-- <div class="w-4/5 h-20 content-center">
				<img
					src="/public/assets/images/spiral.png"
					alt=""
					class="rotate-180 w-[74px] lg:w-full h-24 lg:h-8 object-contain"
				/>
			</div>
			<div class="w-4/5 h-20 content-center">
				<img src="/public/assets/images/spiral.png" alt="" class="w-full h-8 object-contain" />
			</div> -->
		</div>

		<div class="grid grid-cols-1 md:grid-cols-2 gap-8">
			<div>
				<div class="px-4 py-8 bg-[#ffe7a5] flex flex-col items-center justify-center mb-4">
					<h3 class="text-2xl font-bold text-center m-0 text-black">Track Cloud y AI</h3>
				</div>
				{
					trackCloud.map((talk) => {
						switch (talk.data.type) {
							case 'talk':
								return <TalkItem talk={talk} />
							case 'sponsor':
								return <SponsorItem talk={talk} />
							default:
								return <BreakItem talk={talk} />
						}
					})
				}
			</div>
			<div>
				<div class="px-4 py-8 bg-[#ffe7a5] flex flex-col items-center justify-center mb-4">
					<h3 class="text-2xl font-bold text-center m-0 text-black">Track Web y Mobile</h3>
				</div>
				{
					trackWeb.map((talk) => {
						switch (talk.data.type) {
							case 'talk':
								return <TalkItem talk={talk} />
							case 'sponsor':
								return <SponsorItem talk={talk} />
							default:
								return <BreakItem talk={talk} />
						}
					})
				}
			</div>
		</div>
	</div>
</section>
