---
import BreakItem from "@components/AgendaItem/BreakItem.astro";
import SponsorItem from "@components/AgendaItem/SponsorItem.astro";
import TalkItem from "@components/AgendaItem/TalkItem.astro";
import type { CollectionEntry } from "astro:content";

interface Props {
  talks: CollectionEntry<"talks">[];
}

type Talk = CollectionEntry<"talks">["data"][0];

const { talks } = Astro.props;

const sortByDate = (a: Talk, b: Talk) => {
  const aDate = new Date(a.startDate);
  const bDate = new Date(b.startDate);

  return aDate.getTime() - bDate.getTime();
};

const DAY = "devfest";
const tracksNames: Record<string, string> = {
  track1: "Xepia",
  track2: "Torreón",
};

const trackSchedule = talks
  .find((talk) => talk.id === DAY)
  ?.data.sort(sortByDate);

const tracks = trackSchedule?.reduce((tracks, talk) => {
  const talkTracks = talk.track || [];
  talkTracks.forEach((track) => {
    if (!tracks.has(track)) {
      tracks.set(track, [talk]);
    } else {
      tracks.get(track)?.push(talk);
    }
  });
  return tracks;
}, new Map<string, Talk[]>());
---

<section class="my-8">
  <div class="footer-bg top">
    <svg
      viewBox="0 0 500 20"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      class="w-full h-auto"
      preserveAspectRatio="none"
      style="transform: rotate(180deg);"
    >
      <polygon points="0,0 500,20 500,0 0,0" fill="var(--agenda-bg)"></polygon>
    </svg>
  </div>
  <div class="content flex items-center justify-center flex-col px-2">
    <h3 class="text-2xl font-bold py-2 md:text-5xl md:mb-12">Cronograma</h3>
    <span class="text-md md:text-lg font-light mb-6 md:mb-12"
      >Lugar: Universidad Autónoma de Occidente Cali.</span
    >

    <!-- <p>TBD</p> -->
    <div
      class={`grid grid-cols-1 md:grid-cols-${
        tracks?.size ?? 2
      } grid-rows-1 gap-0`}
      style="align-items: stretch;"
    >
      {
        tracks &&
          Array.from(tracks.entries()).map(([trackName, trackTalks]) => (
            <div class="flex flex-col h-full">
              <div class="px-4 py-8 bg-[#ffe7a5] flex flex-col items-center justify-center mb-4">
                <h3 class="text-2xl font-bold text-center m-0 text-black">
                  {tracksNames[trackName] || trackName}
                </h3>
              </div>
              <div class="flex-1 flex flex-col">
                {trackTalks?.map((talk) => {
                  switch (talk.type) {
                    case "talk":
                      return <TalkItem talk={talk} />;
                    case "sponsor":
                      return <SponsorItem talk={talk} />;
                    case "break":
                      return <BreakItem talk={talk} />;
                    default:
                      return <div />;
                  }
                })}
              </div>
            </div>
          ))
      }
    </div>
  </div>
  <div class="footer-bg bottom fixed">
    <svg
      viewBox="0 0 500 20"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      class="w-full h-auto"
      preserveAspectRatio="none"
    >
      {/* Declination from left (top) to right (bottom) */}
      <polygon points="0,0 500,20 500,0 0,0" fill="var(--agenda-bg)"></polygon>
    </svg>
  </div>
</section>

<style>
  :root {
    --agenda-bg: #8ed8f8;
  }
  .content {
    background-color: var(--agenda-bg);
  }

  .footer-bg {
    position: relative;
    width: 100%;
    overflow: hidden;
  }

  .footer-section {
    position: relative;
    padding-top: 0;
    margin-top: 0;
  }

  .footer-section .top {
    border-bottom: 1px solid var(--agenda-bg);
  }

  .footer-section .bottom {
    /* background-color: #003773; */
  }
</style>
