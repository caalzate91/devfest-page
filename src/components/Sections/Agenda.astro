---
import BreakItem from "@components/AgendaItem/BreakItem.astro";
import SponsorItem from "@components/AgendaItem/SponsorItem.astro";
import TalkItem from "@components/AgendaItem/TalkItem.astro";
import type { CollectionEntry } from "astro:content";

interface Props {
  agenda: CollectionEntry<"talks">;
}

type Talk = CollectionEntry<"talks">["data"][0];

const { agenda } = Astro.props;

const sortByDate = (a: Talk, b: Talk) => {
  const aDate = new Date(a.startDate);
  const bDate = new Date(b.startDate);

  return aDate.getTime() - bDate.getTime();
};

const tracksData: Record<string, any> = {
  track1: "Xepia",
  track2: "Torreón",
};

// Build a time slot grid: each row is a time slot, each column is a track
const agendaData = agenda.data;

// Get all unique start times, sorted
const allTimes = Array.from(
  new Set(agendaData?.map((talk) => talk.startDate))
).sort((a, b) => new Date(a).getTime() - new Date(b).getTime());

const trackKeys = Array.from(
  new Set(
    agendaData?.flatMap((agenda) =>
      Array.isArray(agenda.track) ? agenda.track.map(String) : []
    ) ?? []
  )
);

// Build a grid: rows = time slots, columns = tracks
const agendaGrid = allTimes.map((time) => {
  const row = trackKeys.map((track) =>
    agendaData?.find((talk) => {
      const talkTracks = Array.isArray(talk.track)
        ? talk.track.map(String)
        : [];
      return talk.startDate === time && talkTracks.includes(track);
    })
  );
  return { time, row };
});
---

<section class="my-8">
  <div class="footer-bg top">
    <svg
      viewBox="0 0 500 20"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      class="w-full h-auto"
      preserveAspectRatio="none"
      style="transform: rotate(180deg);"
    >
      <polygon points="0,0 500,20 500,0 0,0" fill="var(--agenda-bg)"></polygon>
    </svg>
  </div>
  <div class="content flex items-center justify-center flex-col px-2 py-4">
    <h3 class="text-2xl font-bold py-2 md:text-5xl md:mb-12">Cronograma</h3>
    <div class="text-md md:text-lg font-light mb-6 md:mb-12">
      Lugar: Universidad Autónoma de Occidente Cali.

      <div class="flex flex-row w-full items-center justify-center gap-8 pt-6">
        <a
          href="/dataday"
          target="_self"
          class={`w-fit px-6 py-2 rounded-3xl text-sm md:text-base text-center
        font-bold hover:bg-gray-200 transition cursor-pointer
        bg-white text-black
        ${agenda.id === "dataday" ? "ring-4 ring-blue-400" : ""}`}
        >
          <div>Data Day</div>
          <span class="font-light">7 de Noviembre</span>
        </a>

        <a
          href="/devfest"
          target="_self"
          class={`w-fit px-6 py-2 rounded-3xl text-sm md:text-base text-center
        font-bold hover:bg-gray-200 transition cursor-pointer
        bg-white text-black
        ${agenda.id === "devfest" ? "ring-4 ring-yellow-400" : ""}`}
        >
          <div>DevFest</div>
          <span class="font-light">8 de Noviembre</span>
        </a>
      </div>
    </div>

    <!-- style={`display: grid; grid-template-columns: repeat(${trackKeys.length}, 1fr); align-items: stretch;`} -->
    <div class={`agenda-grid grid grid-cols-${trackKeys.length} items-stretch`}>
      {/* Header row */}
      {
        trackKeys.map((track) => (
          <div class="px-4 py-8 flex flex-col items-center justify-center">
            <h3 class="text-2xl md:text-3xl font-bold text-center m-0 text-black">
              {tracksData[track]}
            </h3>
          </div>
        ))
      }
      {/* Agenda rows */}
      {
        agendaGrid.map(({ time, row }) =>
          row.map((talk, idx) => (
            <div class="agenda-cell md:min-h-[60px] flex flex-col justify-stretch">
              {talk && (
                <>
                  {(() => {
                    switch (talk.type) {
                      case "talk":
                        return <TalkItem talk={talk} />;
                      case "sponsor":
                        return <SponsorItem talk={talk} />;
                      case "break":
                        return <BreakItem talk={talk} />;
                      default:
                        return <div />;
                    }
                  })()}
                </>
              )}
            </div>
          ))
        )
      }
    </div>
  </div>
  <div class="footer-bg bottom fixed">
    <svg
      viewBox="0 0 500 20"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      class="w-full h-auto"
      preserveAspectRatio="none"
    >
      {/* Declination from left (top) to right (bottom) */}
      <polygon points="0,0 500,20 500,0 0,0" fill="var(--agenda-bg)"></polygon>
    </svg>
  </div>
</section>

<script is:inline>
  // Preserve scroll position for /dataday and /devfest links
  document.addEventListener("DOMContentLoaded", () => {
    // Restore scroll position if available, with smooth scroll
    const saved = sessionStorage.getItem("scroll-pos");
    if (saved) {
      const y = parseInt(saved, 10);
      window.scrollTo({ top: y, behavior: "instant" });
      sessionStorage.removeItem("scroll-pos");
    }

    // Attach click handler to agenda links
    document
      .querySelectorAll('a[href="/dataday"], a[href="/devfest"]')
      .forEach((link) => {
        link.addEventListener("click", (e) => {
          sessionStorage.setItem("scroll-pos", window.scrollY);
        });
      });
  });
</script>

<style>
  :root {
    --agenda-bg: #8ed8f8;
  }
  .content {
    background-color: var(--agenda-bg);
  }

  .footer-bg {
    position: relative;
    width: 100%;
    overflow: hidden;
  }

  .footer-section {
    position: relative;
    padding-top: 0;
    margin-top: 0;
  }

  .footer-section .top {
    border-bottom: 1px solid var(--agenda-bg);
  }

  .footer-section .bottom {
    /* background-color: #003773; */
  }
  .agenda-grid {
    background-color: var(--agenda-bg);
    width: 100%;
    border-radius: 0 0 8px 8px;
    overflow: hidden;
  }
  .agenda-cell {
    box-sizing: border-box;
  }
</style>
